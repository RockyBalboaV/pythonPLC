[unix_http_server]                     ; supervisor的unix socket配置
file=/var/run/supervisor.sock          ; socket文件保存目录
chmod=0777                             ; socket的文件权限
;chown=root:vagrant

[inet_http_server]                     ; Web管理界面设定(TCP服务配置)
port=9001                              ; TCP端口
username=admin                         ; TCP登录用户
password=admin                         ; TCP登录密码

[supervisorctl]                        ; 必须和'unix_http_server'里面的设定匹配
serverurl=unix:///var/run/supervisor.sock

[supervisord]                                ; supervisor主进程配置
logfile=/var/log/supervisor/supervisord.log  ; 主要的进程日志配置
logfile_maxbytes=20MB                        ; 最大日志大小，默认50MB
logfile_backups=10                           ; 主日志备份数目，默认10
loglevel=warn                               ; 日志级别;默认info; 其它: debug,warn,trace
pidfile=/var/run/supervisord.pid             ; supervisord的pidfile文件;默认supervisord.pid
nodaemon=false                               ; 是否不以守护进程的方式运行;默认false
minfds=1024                                  ; 最小的有效文件描述符;默认1024
minprocs=200                                 ; 最小的有效进程描述符;默认200
user=root                                    ; 默认的当前用户, 如果是root必填
;identifier=supervisor                       ; supervisord的表示符, 默认时'supervisor'
childlogdir=/var/log/supervisor/             ; ('AUTO' child log dir, default $TEMP)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: section
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; 管理的单个进程的配置，可以添加多个program，program后为程序名称
[program:pyplc]
directory=/home/pi/pythonPLC/Client/
command=/home/pi/.pyenv/versions/pyplc/bin/python /home/pi/pythonPLC/Client/manage.py --config prod --url server --start
stopsignal=KILL
stopasgroup=true
autostart=true
autorestart=true
startsecs=15
startretries=30
stopwaitsecs=10
user=pi
; 将标准错误重定向到标准输出，默认false
redirect_stderr=true
stdout_logfile_maxbytes=10MB
stdoiut_logfile_backups=5
stdout_logfile=/home/pi/pythonPLC/Client/pyplc.log


